-- SQL Test Task Database Setup
-- Creates tables and inserts test data for SQL interview

-- Customers table
CREATE TABLE customers (
    customer_id SERIAL PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    phone VARCHAR(20),
    registration_date DATE DEFAULT CURRENT_DATE
);

-- Products table
CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name VARCHAR(100) NOT NULL,
    category VARCHAR(50),
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INTEGER DEFAULT 0
);

-- Orders table
CREATE TABLE orders (
    order_id SERIAL PRIMARY KEY,
    customer_id INTEGER NOT NULL,
    order_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    total_amount DECIMAL(10, 2),
    status VARCHAR(20) DEFAULT 'pending',
    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);

-- Order items table
CREATE TABLE order_items (
    order_item_id SERIAL PRIMARY KEY,
    order_id INTEGER NOT NULL,
    product_id INTEGER NOT NULL,
    quantity INTEGER NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (order_id) REFERENCES orders(order_id),
    FOREIGN KEY (product_id) REFERENCES products(product_id)
);

-- Insert test data

-- Test customers (50+ records)
INSERT INTO customers (first_name, last_name, email, phone, registration_date) VALUES
('Alexander', 'Johnson', 'alexander.johnson@email.com', '+1234567001', '2023-01-15'),
('Maria', 'Williams', 'maria.williams@email.com', '+1234567002', '2023-01-16'),
('David', 'Brown', 'david.brown@email.com', '+1234567003', '2023-01-17'),
('Sarah', 'Jones', 'sarah.jones@email.com', '+1234567004', '2023-01-18'),
('Michael', 'Garcia', 'michael.garcia@email.com', '+1234567005', '2023-01-19'),
('Jennifer', 'Miller', 'jennifer.miller@email.com', '+1234567006', '2023-01-20'),
('William', 'Davis', 'william.davis@email.com', '+1234567007', '2023-01-21'),
('Linda', 'Rodriguez', 'linda.rodriguez@email.com', '+1234567008', '2023-01-22'),
('Robert', 'Martinez', 'robert.martinez@email.com', '+1234567009', '2023-01-23'),
('Patricia', 'Hernandez', 'patricia.hernandez@email.com', '+1234567010', '2023-01-24'),
('James', 'Lopez', 'james.lopez@email.com', '+1234567011', '2023-01-25'),
('Barbara', 'Gonzalez', 'barbara.gonzalez@email.com', '+1234567012', '2023-01-26'),
('Richard', 'Wilson', 'richard.wilson@email.com', '+1234567013', '2023-01-27'),
('Susan', 'Anderson', 'susan.anderson@email.com', '+1234567014', '2023-01-28'),
('Joseph', 'Thomas', 'joseph.thomas@email.com', '+1234567015', '2023-01-29'),
('Jessica', 'Taylor', 'jessica.taylor@email.com', '+1234567016', '2023-01-30'),
('Christopher', 'Moore', 'christopher.moore@email.com', '+1234567017', '2023-02-01'),
('Ashley', 'Jackson', 'ashley.jackson@email.com', '+1234567018', '2023-02-02'),
('Matthew', 'Martin', 'matthew.martin@email.com', '+1234567019', '2023-02-03'),
('Amy', 'Lee', 'amy.lee@email.com', '+1234567020', '2023-02-04'),
('Joshua', 'Perez', 'joshua.perez@email.com', '+1234567021', '2023-02-05'),
('Michelle', 'Thompson', 'michelle.thompson@email.com', '+1234567022', '2023-02-06'),
('Daniel', 'White', 'daniel.white@email.com', '+1234567023', '2023-02-07'),
('Kimberly', 'Harris', 'kimberly.harris@email.com', '+1234567024', '2023-02-08'),
('Andrew', 'Sanchez', 'andrew.sanchez@email.com', '+1234567025', '2023-02-09'),
('Donna', 'Clark', 'donna.clark@email.com', '+1234567026', '2023-02-10'),
('Mark', 'Lewis', 'mark.lewis@email.com', '+1234567027', '2023-02-11'),
('Carol', 'Robinson', 'carol.robinson@email.com', '+1234567028', '2023-02-12'),
('Kenneth', 'Walker', 'kenneth.walker@email.com', '+1234567029', '2023-02-13'),
('Lisa', 'Young', 'lisa.young@email.com', '+1234567030', '2023-02-14'),
('Steven', 'Allen', 'steven.allen@email.com', '+1234567031', '2023-02-15'),
('Betty', 'King', 'betty.king@email.com', '+1234567032', '2023-02-16'),
('Edward', 'Wright', 'edward.wright@email.com', '+1234567033', '2023-02-17'),
('Helen', 'Scott', 'helen.scott@email.com', '+1234567034', '2023-02-18'),
('Brian', 'Torres', 'brian.torres@email.com', '+1234567035', '2023-02-19'),
('Margaret', 'Nguyen', 'margaret.nguyen@email.com', '+1234567036', '2023-02-20'),
('Ronald', 'Hill', 'ronald.hill@email.com', '+1234567037', '2023-02-21'),
('Dorothy', 'Flores', 'dorothy.flores@email.com', '+1234567038', '2023-02-22'),
('Anthony', 'Green', 'anthony.green@email.com', '+1234567039', '2023-02-23'),
('Ruth', 'Adams', 'ruth.adams@email.com', '+1234567040', '2023-02-24'),
('Kevin', 'Nelson', 'kevin.nelson@email.com', '+1234567041', '2023-02-25'),
('Sharon', 'Baker', 'sharon.baker@email.com', '+1234567042', '2023-02-26'),
('Jason', 'Hall', 'jason.hall@email.com', '+1234567043', '2023-02-27'),
('Michelle', 'Rivera', 'michelle.rivera@email.com', '+1234567044', '2023-02-28'),
('Ryan', 'Campbell', 'ryan.campbell@email.com', '+1234567045', '2023-03-01'),
('Laura', 'Mitchell', 'laura.mitchell@email.com', '+1234567046', '2023-03-02'),
('Gary', 'Carter', 'gary.carter@email.com', '+1234567047', '2023-03-03'),
('Sandra', 'Roberts', 'sandra.roberts@email.com', '+1234567048', '2023-03-04'),
('Timothy', 'Phillips', 'timothy.phillips@email.com', '+1234567049', '2023-03-05'),
('Anna', 'Evans', 'anna.evans@email.com', '+1234567050', '2023-03-06'),
('Jose', 'Turner', 'jose.turner@email.com', '+1234567051', '2023-03-07'),
('Rachel', 'Parker', 'rachel.parker@email.com', '+1234567052', '2023-03-08'),
('Frank', 'Collins', 'frank.collins@email.com', '+1234567053', '2023-03-09'),
('Carolyn', 'Edwards', 'carolyn.edwards@email.com', '+1234567054', '2023-03-10');

-- Test products (50+ records)
INSERT INTO products (product_name, category, price, stock_quantity) VALUES
('MacBook Pro 16-inch', 'Electronics', 2499.99, 15),
('Dell XPS 13', 'Electronics', 1299.99, 20),
('HP Spectre x360', 'Electronics', 1199.99, 18),
('Lenovo ThinkPad X1', 'Electronics', 1899.99, 12),
('ASUS ZenBook 14', 'Electronics', 899.99, 25),
('iPhone 14 Pro', 'Electronics', 999.99, 30),
('Samsung Galaxy S23', 'Electronics', 799.99, 35),
('Google Pixel 7', 'Electronics', 599.99, 28),
('OnePlus 11', 'Electronics', 699.99, 22),
('Xiaomi Mi 13', 'Electronics', 549.99, 40),
('iPad Pro 12.9', 'Electronics', 1099.99, 20),
('Samsung Galaxy Tab S8', 'Electronics', 729.99, 25),
('Microsoft Surface Pro 9', 'Electronics', 999.99, 18),
('Logitech MX Master 3', 'Electronics', 99.99, 50),
('Apple Magic Mouse', 'Electronics', 79.99, 45),
('Razer DeathAdder V3', 'Electronics', 69.99, 60),
('SteelSeries Rival 650', 'Electronics', 89.99, 35),
('Corsair M65 RGB Elite', 'Electronics', 59.99, 40),
('Mechanical Keyboard RGB', 'Electronics', 149.99, 30),
('Apple Magic Keyboard', 'Electronics', 129.99, 25),
('Corsair K95 RGB Platinum', 'Electronics', 199.99, 20),
('Logitech G915 TKL', 'Electronics', 229.99, 15),
('Keychron K8', 'Electronics', 89.99, 35),
('Sony WH-1000XM5', 'Electronics', 399.99, 25),
('Apple AirPods Pro 2', 'Electronics', 249.99, 40),
('Bose QuietComfort 45', 'Electronics', 329.99, 30),
('Sennheiser HD 660S', 'Electronics', 499.99, 15),
('Audio-Technica ATH-M50x', 'Electronics', 149.99, 45),
('Dell UltraSharp 27 Monitor', 'Electronics', 449.99, 20),
('LG 34-inch Ultrawide', 'Electronics', 899.99, 12),
('Samsung 32-inch 4K Monitor', 'Electronics', 349.99, 25),
('ASUS ROG Gaming Monitor', 'Electronics', 599.99, 18),
('BenQ Professional Monitor', 'Electronics', 299.99, 30),
('Nike Air Max 270', 'Footwear', 150.00, 50),
('Adidas Ultraboost 22', 'Footwear', 180.00, 45),
('New Balance 990v5', 'Footwear', 175.00, 40),
('Converse Chuck Taylor', 'Footwear', 55.00, 80),
('Vans Old Skool', 'Footwear', 65.00, 70),
('Puma RS-X', 'Footwear', 110.00, 35),
('Reebok Classic Leather', 'Footwear', 75.00, 60),
('Jordan 1 High', 'Footwear', 170.00, 25),
('Nike Dunk Low', 'Footwear', 100.00, 55),
('Adidas Stan Smith', 'Footwear', 80.00, 65),
('Levis 501 Original Jeans', 'Clothing', 59.99, 100),
('Calvin Klein T-Shirt', 'Clothing', 25.99, 120),
('Tommy Hilfiger Polo', 'Clothing', 49.99, 80),
('Ralph Lauren Oxford Shirt', 'Clothing', 89.99, 60),
('Gap Hoodie', 'Clothing', 39.99, 90),
('Uniqlo Down Jacket', 'Clothing', 79.99, 45),
('Zara Blazer', 'Clothing', 99.99, 35),
('H&M Casual Dress', 'Clothing', 29.99, 70),
('Forever 21 Crop Top', 'Clothing', 15.99, 85),
('Urban Outfitters Sweater', 'Clothing', 65.99, 50),
('Patagonia Fleece Jacket', 'Clothing', 149.99, 30),
('The North Face Backpack', 'Accessories', 89.99, 40),
('Herschel Supply Backpack', 'Accessories', 69.99, 55),
('Fjallraven Kanken', 'Accessories', 79.99, 45),
('Ray-Ban Aviator Sunglasses', 'Accessories', 154.99, 35),
('Oakley Holbrook Sunglasses', 'Accessories', 132.99, 40),
('Fossil Leather Watch', 'Accessories', 129.99, 25),
('Casio G-Shock Watch', 'Accessories', 99.99, 50),
('Timex Weekender Watch', 'Accessories', 39.99, 60);

-- Test orders (50+ records)
INSERT INTO orders (customer_id, order_date, total_amount, status) VALUES
(1, '2023-04-01 10:30:00', 2649.98, 'completed'),
(2, '2023-04-02 14:15:00', 899.99, 'shipped'),
(3, '2023-04-03 09:45:00', 1549.98, 'completed'),
(4, '2023-04-04 16:20:00', 399.99, 'pending'),
(5, '2023-04-05 11:00:00', 179.98, 'shipped'),
(6, '2023-04-06 13:30:00', 999.99, 'completed'),
(7, '2023-04-07 08:15:00', 249.99, 'cancelled'),
(8, '2023-04-08 17:45:00', 1899.99, 'pending'),
(9, '2023-04-09 12:00:00', 329.99, 'shipped'),
(10, '2023-04-10 15:30:00', 729.99, 'completed'),
(11, '2023-04-11 10:45:00', 149.99, 'completed'),
(12, '2023-04-12 14:00:00', 599.99, 'shipped'),
(13, '2023-04-13 09:30:00', 199.99, 'pending'),
(14, '2023-04-14 16:15:00', 449.99, 'completed'),
(15, '2023-04-15 11:45:00', 89.99, 'shipped'),
(16, '2023-04-16 13:00:00', 299.99, 'completed'),
(17, '2023-04-17 08:30:00', 1099.99, 'pending'),
(18, '2023-04-18 17:00:00', 79.99, 'shipped'),
(19, '2023-04-19 12:30:00', 549.99, 'completed'),
(20, '2023-04-20 15:00:00', 899.99, 'pending'),
(21, '2023-04-21 10:15:00', 229.99, 'completed'),
(22, '2023-04-22 14:45:00', 349.99, 'shipped'),
(23, '2023-04-23 09:00:00', 499.99, 'completed'),
(24, '2023-04-24 16:30:00', 129.99, 'pending'),
(25, '2023-04-25 11:15:00', 699.99, 'shipped'),
(26, '2023-04-26 13:45:00', 799.99, 'completed'),
(27, '2023-04-27 08:00:00', 179.98, 'pending'),
(28, '2023-04-28 17:30:00', 249.99, 'shipped'),
(29, '2023-04-29 12:45:00', 399.99, 'completed'),
(30, '2023-04-30 15:15:00', 89.99, 'pending'),
(31, '2023-05-01 10:00:00', 1199.99, 'shipped'),
(32, '2023-05-02 14:30:00', 329.99, 'completed'),
(33, '2023-05-03 09:15:00', 599.99, 'pending'),
(34, '2023-05-04 16:00:00', 149.99, 'shipped'),
(35, '2023-05-05 11:30:00', 449.99, 'completed'),
(36, '2023-05-06 13:15:00', 299.99, 'pending'),
(37, '2023-05-07 08:45:00', 199.99, 'shipped'),
(38, '2023-05-08 17:15:00', 729.99, 'completed'),
(39, '2023-05-09 12:15:00', 89.99, 'pending'),
(40, '2023-05-10 15:45:00', 999.99, 'shipped'),
(41, '2023-05-11 10:30:00', 349.99, 'completed'),
(42, '2023-05-12 14:00:00', 179.98, 'pending'),
(43, '2023-05-13 09:30:00', 549.99, 'shipped'),
(44, '2023-05-14 16:45:00', 229.99, 'completed'),
(45, '2023-05-15 11:00:00', 399.99, 'pending'),
(46, '2023-05-16 13:30:00', 149.99, 'shipped'),
(47, '2023-05-17 08:15:00', 299.99, 'completed'),
(48, '2023-05-18 17:00:00', 199.99, 'pending'),
(49, '2023-05-19 12:30:00', 449.99, 'shipped'),
(50, '2023-05-20 15:00:00', 329.99, 'completed'),
(1, '2023-05-21 10:45:00', 699.99, 'pending'),
(2, '2023-05-22 14:15:00', 249.99, 'shipped'),
(3, '2023-05-23 09:00:00', 899.99, 'completed'),
(4, '2023-05-24 16:30:00', 129.99, 'pending'),
(5, '2023-05-25 11:45:00', 599.99, 'shipped');

-- Test order items (100+ records)
INSERT INTO order_items (order_id, product_id, quantity, unit_price) VALUES
(1, 1, 1, 2499.99), (1, 14, 1, 99.99), (1, 19, 1, 149.99),
(2, 5, 1, 899.99),
(3, 2, 1, 1299.99), (3, 24, 1, 399.99),
(4, 24, 1, 399.99),
(5, 15, 1, 79.99), (5, 17, 1, 69.99), (5, 42, 1, 75.00),
(6, 6, 1, 999.99),
(7, 25, 1, 249.99),
(8, 4, 1, 1899.99),
(9, 26, 1, 329.99),
(10, 12, 1, 729.99),
(11, 19, 1, 149.99),
(12, 32, 1, 599.99),
(13, 21, 1, 199.99),
(14, 29, 1, 449.99),
(15, 23, 1, 89.99),
(16, 33, 1, 299.99),
(17, 11, 1, 1099.99),
(18, 16, 1, 79.99),
(19, 10, 1, 549.99),
(20, 31, 1, 899.99),
(21, 22, 1, 229.99),
(22, 31, 1, 349.99),
(23, 27, 1, 499.99),
(24, 47, 1, 129.99),
(25, 9, 1, 699.99),
(26, 7, 1, 799.99),
(27, 34, 1, 150.00), (27, 42, 1, 75.00),
(28, 25, 1, 249.99),
(29, 24, 1, 399.99),
(30, 23, 1, 89.99),
(31, 3, 1, 1199.99),
(32, 26, 1, 329.99),
(33, 32, 1, 599.99),
(34, 19, 1, 149.99),
(35, 29, 1, 449.99),
(36, 33, 1, 299.99),
(37, 21, 1, 199.99),
(38, 12, 1, 729.99),
(39, 23, 1, 89.99),
(40, 6, 1, 999.99),
(41, 31, 1, 349.99),
(42, 34, 1, 150.00), (42, 42, 1, 75.00),
(43, 10, 1, 549.99),
(44, 22, 1, 229.99),
(45, 24, 1, 399.99),
(46, 19, 1, 149.99),
(47, 33, 1, 299.99),
(48, 21, 1, 199.99),
(49, 29, 1, 449.99),
(50, 26, 1, 329.99),
(51, 9, 1, 699.99),
(52, 25, 1, 249.99),
(53, 31, 1, 899.99),
(54, 47, 1, 129.99),
(55, 32, 1, 599.99),
-- Additional order items for better data variety
(1, 53, 1, 53.99), (2, 34, 2, 150.00), (3, 45, 1, 59.99),
(4, 38, 1, 65.00), (5, 41, 1, 170.00), (6, 20, 1, 129.99),
(7, 48, 1, 49.99), (8, 14, 2, 99.99), (9, 35, 1, 180.00),
(10, 28, 1, 149.99), (11, 46, 1, 25.99), (12, 39, 1, 110.00),
(13, 50, 1, 29.99), (14, 16, 1, 69.99), (15, 37, 1, 55.00),
(16, 44, 2, 59.99), (17, 18, 1, 59.99), (18, 51, 1, 15.99),
(19, 30, 1, 449.99), (20, 40, 1, 75.00), (21, 49, 1, 39.99),
(22, 52, 1, 65.99), (23, 17, 2, 69.99), (24, 36, 1, 175.00),
(25, 43, 1, 100.00), (26, 15, 1, 79.99), (27, 54, 1, 89.99),
(28, 55, 1, 69.99), (29, 56, 1, 79.99), (30, 57, 1, 154.99);

-- Create indexes for query optimization
CREATE INDEX idx_orders_customer_id ON orders(customer_id);
CREATE INDEX idx_order_items_order_id ON order_items(order_id);
CREATE INDEX idx_order_items_product_id ON order_items(product_id);
CREATE INDEX idx_customers_email ON customers(email);
CREATE INDEX idx_products_category ON products(category);
CREATE INDEX idx_orders_status ON orders(status);
CREATE INDEX idx_orders_date ON orders(order_date); 